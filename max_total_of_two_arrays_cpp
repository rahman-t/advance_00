/*finding the highest sum of two arrays without adding up numbers having the same indices or the numbers being consecutive in their
respective array.
arr1 = {\  /\  /}      
arr2 = { \/  \/ }

if arr1 = { 1, 2, 3, 4, 5} and arr2 = { 6, 7, 8, 9, 10} the pattern followed by the addition will follow the figure above: 
  1 + 7 + 3 + 9 + 5 = 25  and 2 + 6 + 4 + 8 + 10 = 30 .
 
 Given the example above, our program, more specifically our function, should return 30 as the desired answer.
*/

#include <bits/stdc++.h>
using namespace std;

int max_total(int ar1[], int ar2[], int n){
    
    int provA[n][2];
    
    for(int i = 0; i < n; i++) {
        if ( i == 0) {
            provA[i][0] = ar1[i];
            provA[i][1] = ar2[i];
            continue;
        }
        provA[i][0] = max(provA[i-1][0], provA[i-1][1] + ar1[i]);
        provA[i][1] = max(provA[i-1][1], provA[i-1][0] + ar2[i]);
    }
    
    return max(provA[n-1][0], provA[n-1][1]);
}

int main()
{
    int arr1[] = {9, 23, 11, 18, 20};
    int arr2[] = {7, 13, 20, 27, 30};
    int s = sizeof(arr1)/sizeof(arr1[0]);
    int result = max_total(arr1, arr2, s);
    
    cout << " Result: " << result;
    return 0;
}
